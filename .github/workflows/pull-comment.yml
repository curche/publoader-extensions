name: "Comment New Titles to PR"

on:
  pull_request:
    branches: [ "jq-comm-title-comment" ]
    paths:
      - 'src/mangaplus/manga_id_map.json'
    types: [opened, synchronize]

jobs:
  diff:
    name: Extract {UU,}IDs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Fetch branches
        run: |
          git fetch origin pull/${{ github.event.number }}/head:NEW_BRANCH
          git fetch origin ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}:CURRENT_BRANCH
      - name: Git Show
        run: |
          git -P show NEW_BRANCH:src/mangaplus/manga_id_map.json >new
          git -P show CURRENT_BRANCH:src/mangaplus/manga_id_map.json >current
      - name: jq to plus
        run: |
          jq -r $(echo '.[].[]') new | sort | tee new.mangaplus
          jq -r $(echo '.[].[]') current | sort | tee current.mangaplus
      - name: jq to dex
        run: |
          what=". | keys[]"
          cat new | jq --raw-output "$what" | sort | tee new.mangadex
          cat current | jq --raw-output "$what" | sort | tee current.mangadex
      - name: debug
        run: |
          cat {new,current}.manga{dex,plus}
          diff new.mangadex current.mangadex | grep '<' | cut -c3- | tee mangadex.comm
          diff new.mangaplus current.mangaplus | grep '<' | cut -c3- | tee mangaplus.comm
      - id: result
        run: |
          echo "dex_comm=$(cat mangadex.comm)" >> $GITHUB_OUTPUT
          echo "plus_comm=$(cat mangaplus.comm)" >> $GITHUB_OUTPUT

    outputs:
      dex: ${{ steps.result.outputs.dex_comm }}
      plus: ${{ steps.result.outputs.dex_comm }}

  comment-on-pr:
    name: Comment to PR
    runs-on: ubuntu-latest
    needs: [diff]
    steps:
      - name: Create file
        run: |
          dex_comm=${{ fromJson(needs.diff.outputs.dex) }}
          plus_comm=${{ fromJson(needs.diff.outputs.plus) }}
          echo "New Dex UUID(s): " | tee pr.comment
          for uuid in ${dex_comm}; do
            echo "[${uuid}](https://mangadex.org/title/${uuid}) " | tee -a pr.comment
          done
          echo "\n" | tee -a pr.comment
          echo "New M+ ID(s): ${plus_comm}\n" | tee -a pr.comment
          for mpid in ${plus_comm}; do
            echo "[$mpid](https://mangaplus.shueisha.co.jp/titles/${mpid}) " | tee -a pr.comment
          done
        
      - name: PR comment with file
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: pr.comment
